# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-29 00:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def copy_to_assignments(apps, schema):
    Actor = apps.get_model('stately', 'Actor')
    Assignment = apps.get_model('stately', 'Assignment')

    actors = Actor.objects.all().select_related('case', 'state').prefetch_related('actions')
    assignments = []

    for actor in actors:
        assignment = Assignment.objects.create(
            token=actor.token,
            expiration_dt=actor.expiration_dt,
            valid=actor.valid,
            actor=actor,
            case=actor.case,
            state=actor.state,
        )
        assignment.actions = actor.actions.all()
        assignment.save()

    from collections import defaultdict
    mapping = defaultdict(list)
    for actor in actors:
        # Reassign actions so that there's only one actor per email address.
        if actor.email in mapping:
            canonical_actor = mapping[actor.email]
            for assignment in actor.assignments.all():
                canonical_actor.assignments.add(assignment)
            assert not actor.assignments.exists()
            actor.delete()
        else:
            mapping[actor.email] = actor


def copy_to_actors(apps, schema):
    Actor = apps.get_model('stately', 'Actor')
    actors = Actor.objects.all().prefetch_related('assignments')

    for actor in actors:
        for assignment in actor.assignments.all():
            Actor.objects.create(
                email=actor.email,
                token=assignent.token,
                expiration_dt=assignent.expiration_dt,
                valid=assignent.valid,
                case=assignent.case,
                state=assignent.state,
            )
        actor.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('stately', '0008_allow_nullable_on_actor_expiration'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64)),
                ('expiration_dt', models.DateTimeField(null=True)),
                ('valid', models.BooleanField(default=True)),
                ('actions', models.ManyToManyField(to='stately.Action')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='actor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='stately.Actor'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='case',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actors', to='stately.Case'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stately.State'),
        ),
        migrations.RunPython(
            copy_to_assignments,
            copy_to_actors,
        ),
        migrations.RemoveField(
            model_name='actor',
            name='actions',
        ),
        migrations.RemoveField(
            model_name='actor',
            name='case',
        ),
        migrations.RemoveField(
            model_name='actor',
            name='expiration_dt',
        ),
        migrations.RemoveField(
            model_name='actor',
            name='state',
        ),
        migrations.RemoveField(
            model_name='actor',
            name='token',
        ),
        migrations.RemoveField(
            model_name='actor',
            name='valid',
        ),
    ]
